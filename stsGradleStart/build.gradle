/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'USER' at '16. 8. 24 ?¤í›„ 3:56' with Gradle 3.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'

compileJava.options.encoding='UTF-8'
sourceCompatibility=1.7
version='1.1'

eclipse{
	project.natures "org.springsource.ide.eclipe.gradle.core.nature"
	wtp{
		facet{
			facet name:'jst.web', version:'3.0'
			facet name:'jst.java', version:'1.7'
		}
	}
}

jar{
	manifest{
		attributes 'Implementation-Title':'Gradle Quickstart', 'Implementation-Version':version
	}
}



// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    //jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
	
	compile 'org.springframework:spring-webmvc:4.1.4.RELEASE'
	compile group: 'commons-collections', name:'commons-collections',version:'3.2'
	
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    
    
}

test{
	systemProperties 'property':'value'
}

uploadArchives{
	repositories{
		flatDir{
			dirs 'repos'
		}
	}
}